services:
  web:
    build: .
    command: gunicorn dagstore.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - .:/app
    environment:
      - DJANGO_SETTINGS_MODULE=dagstore.settings
      - CELERY_BROKER_URL=amqp://admin:admin123@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
      - rabbitmq
    ports:
      - "8000:8000"
    restart: unless-stopped

  celery_worker:
    build: .
    command: celery -A dagstore worker -l info
    volumes:
      - .:/app
    environment:
      - DJANGO_SETTINGS_MODULE=dagstore.settings
      - CELERY_BROKER_URL=amqp://admin:admin123@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - web
      - redis
      - rabbitmq
    restart: unless-stopped

  celery_beat:
    build: .
    command: celery -A dagstore beat -l info
    volumes:
      - .:/app
    environment:
      - DJANGO_SETTINGS_MODULE=dagstore.settings
      - CELERY_BROKER_URL=amqp://admin:admin123@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - web
      - redis
      - rabbitmq
    restart: unless-stopped

  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/static
      - media_volume:/media
    depends_on:
      - web
    restart: unless-stopped

  redis:
    image: redis:alpine
    container_name: my_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always

  rabbitmq:
    image: rabbitmq:3.11-management-alpine
    container_name: my_rabbitmq
    ports:
      - "5672:5672"  # Порт для AMQP (брокер сообщений)
      - "15672:15672"  # Порт для веб-интерфейса управления
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: always

volumes:
  redis_data:
  rabbitmq_data:
  static_volume:
  media_volume:

